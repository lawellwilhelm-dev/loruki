@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap');

@import url('utilities.css');

:root {
    --primary-color: #047aed;
}

* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

body {
    font-family: 'Lato', sans-serif;
    color: #333;
    line-height: 1.6;
}

ul {
    list-style-type: none;
}

a {
    text-decoration: none;
    color: #333;
}

h1, h2 {
    font-weight: 300;
    line-height: 1.2;
    margin: 10px 0;
}

p {
    margin: 10px 0;
}

img {
    width: 100%;
}

/* Navbar */
.navbar {
    background-color: var(--primary-color);
    color: #fff;
    height: 70px;
}

.navbar .flex {
    justify-content: space-between;
}

.navbar ul {
    display: flex;
}

.navbar a {
    padding: 10px;
    margin: 0 5px;

    color: #fff;
}

.navbar a:hover {
    border-bottom: 2px solid #fff;
}

/* Showcase */
.showcase {
    height: 400px;
    background-color: var(--primary-color);

    color: #fff;

    position: relative;
}

.showcase .grid {
    grid-template-columns: 55% 45%;
    gap: 30px;

    overflow: visible;
}

.showcase h1 {
    font-size: 40px;
}

.showcase p {
    margin: 20px 0;
}

.showcase-form {
    height: 350px;
    width: 400px;
    padding: 40px;
    z-index: 100;

    position: relative;
    top: 60px;
}

.showcase-form .form-control {
    margin: 30px 0;
}

.showcase-form input[type="text"],
.showcase-form input[type="email"] {
    width: 100%;
    padding: 3px;
    border: 0;
    border-bottom: 1px solid #b4becb;

    font-size: 16px;
    
}

.showcase-form input:focus {
    outline: none;
}

.showcase::before,
.showcase::after {
    content: "";
    height: 100px;
    background-color: #fff;

    position: absolute;
    left: 0;
    right: 0;
    bottom: -70px;

    transform: skewY(-3deg);
}

/* Stats */
.stats {
    padding-top: 100px;
}

.stats-heading {
    max-width: 500px;
    margin: auto;
}

.stats .grid h3 {
    font-size: 35px;
}

.stats .grid p {
    font-size: 20px;
    font-weight: bold;
}

/* CLI */
.cli .grid {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
}

.cli .grid > *:first-child {
    grid-column: 1 / span 2;
    grid-row: 1 / span 2;
}

/* Cloud */
.cloud .grid {
    grid-template-columns: 4fr 3fr;
}